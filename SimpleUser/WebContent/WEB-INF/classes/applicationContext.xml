<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Using JNDI Datasource to keep configuration simple. -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/simpleapp" />
	</bean>

	<bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" id="entityManagerFactory">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- set annotation driven, use proxy because of the Generic DAO setup I 
		used. requires CGLib style proxies instead of JDK -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" /> 
	<!-- <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager" proxy-target-class="true" /> -->
	
	<!-- Register @Autowired annotation -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<!-- Scan packages, use repository annotation -->
	<context:component-scan base-package="DAO.hibernateDAO">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>

	<!-- <context:annotation-config /> -->

</beans>
